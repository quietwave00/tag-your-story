# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: remote ssh command
on:
  push:
    branches: [ 'develop' ]

env:
  PROJECT_NAME: ${{ github.event.repository.name }}-batch
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-batch

jobs:
  build:
    name: CI/CD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle (story-batch)
        run: |
          ./gradlew -p story-batch clean build

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Image Build
        run: docker build -t $DOCKER_IMAGE .

      - name: DockerHub Push
        run: docker push $DOCKER_IMAGE

      - name: executing remote ssh commands using key
        uses: appleboy/ssh-action@v1.0.0
        env:
          SERVER_PORT: ${{ secrets.DEV_SERVER_PORT }}
          JASYPT_PASSWORD: ${{ secrets.DEV_JASYPT_PASSWORD }}
          PHASE: ${{ secrets.PHASE }}
        with:
          host: ${{ secrets.DEV_AWS_HOST }}
          username: ${{ secrets.DEV_AWS_USERNAME }}
          key: ${{ secrets.DEV_AWS_KEY }}
          envs: PROJECT_NAME,DOCKER_IMAGE,SERVER_PORT,JASYPT_PASSWORD,PHASE
          script: |
            docker stop $PROJECT_NAME
            docker rm $PROJECT_NAME
            docker rmi $DOCKER_IMAGE
            docker pull $DOCKER_IMAGE
            docker run --name $PROJECT_NAME -e JASYPT_PASSWORD=$JASYPT_PASSWORD -e PHASE=$PHASE -d $DOCKER_IMAGE


